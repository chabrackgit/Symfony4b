security:
    encoders:
        App\Entity\User:
            algorithm: auto


    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        in_memory: {memory: ~}
        in_database:
            entity:
                class: App\Entity\User
                #config pour Token 
                property: email

        chain_provider:
            chain:
                providers: [in_memory, in_database]
              

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        
        # config pour connexion avec email avec sortie symfony affichage twig
        # main:
        #     anonymous: true

        #     provider: in_database
            
        #     form_login:
        #         login_path: security_login
        #         check_path: security_login

        #     logout:
        #         path: security_logout
        #         target: /
        

        #config pour Token 
        api:         
            pattern: ^/api
            stateless: true
            anonymous: true
            provider: chain_provider
            json_login:
                check_path: /api/login_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
            guard:
                authenticators: 
                - lexik_jwt_authentication.jwt_token_authenticator




            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: ^/api/login_check, roles: IS_AUTHENTICATED_ANONYMOUSLY }
         - { path: ^/api/inscription, roles: IS_AUTHENTICATED_ANONYMOUSLY }
         - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }
         - { path: ^/, roles: IS_AUTHENTICATED_ANONYMOUSLY }

    role_hierarchy:
        ROLE_MANAGER: ROLE_USER
        ROLE_ADMIN: ROLE_MANAGER